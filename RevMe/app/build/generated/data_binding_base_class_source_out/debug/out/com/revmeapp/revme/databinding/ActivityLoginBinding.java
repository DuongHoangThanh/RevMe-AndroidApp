// Generated by data binding compiler. Do not edit!
package com.revmeapp.revme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.revmeapp.revme.R;
import com.revmeapp.revme.ui.auth.AuthViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityLoginBinding extends ViewDataBinding {
  @NonNull
  public final TextView btnSignIn;

  @NonNull
  public final TextView btnToSignUp;

  @NonNull
  public final TextInputEditText edtPassword;

  @NonNull
  public final TextInputEditText edtUsername;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final FrameLayout layoutRoot;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @Bindable
  protected AuthViewModel mViewmodel;

  protected ActivityLoginBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView btnSignIn, TextView btnToSignUp, TextInputEditText edtPassword,
      TextInputEditText edtUsername, ImageView imageView, ImageView imageView2,
      FrameLayout layoutRoot, TextView textView, TextView textView2) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnSignIn = btnSignIn;
    this.btnToSignUp = btnToSignUp;
    this.edtPassword = edtPassword;
    this.edtUsername = edtUsername;
    this.imageView = imageView;
    this.imageView2 = imageView2;
    this.layoutRoot = layoutRoot;
    this.textView = textView;
    this.textView2 = textView2;
  }

  public abstract void setViewmodel(@Nullable AuthViewModel viewmodel);

  @Nullable
  public AuthViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_login, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityLoginBinding>inflateInternal(inflater, R.layout.activity_login, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_login, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityLoginBinding>inflateInternal(inflater, R.layout.activity_login, null, false, component);
  }

  public static ActivityLoginBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityLoginBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityLoginBinding)bind(component, view, R.layout.activity_login);
  }
}
